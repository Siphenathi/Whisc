@model WHSIC.Model.ProgramUploadViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Secretary/_DashBoard.cshtml";
}
<div class="well">
    <h2>Edit Program Upload</h2>


    @using (Html.BeginForm("Edit", "ProgramUpload", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ProgramId)
        <div class="form-horizontal">
            <h4>Program</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-3">
                    @Html.DropDownList("Name", (SelectList)ViewBag.pc, "---Select Program Name--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { placeholder = "Enter Program Start Date", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { placeholder = "Enter Program End Date", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Venue, new { htmlAttributes = new { @placeholder = "Enter Program Venue", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Venue, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    @Html.TextAreaFor(model => model.Content, new { @class = "form-control", @placeholder = "Enter Program Content" })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <table>
                    <tr>
                        <td></td>

                        <td>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label>Browse Contract</label>
                            &nbsp;&nbsp;&nbsp;
                            <div class="fileUpload btn btn-primary" style="background-color: #052963; color: #00C6D7">
                                <input type="file" required="" onchange="readURL(this);" name="File" accept="application/doc, application/pdf" class="upload" />
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
            <div>
                <img id="blah" src="#" alt="" />

            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <input type="submit" value="Upload Contents" class="btn btn-default" style="background-color:purple; color:gold;opacity:0.6" />

                </div>
            </div>
        </div>
    }
    <div>
        @Html.ActionLink("Back to List", "Index", "ProgramUpload", null, new { @class = "btn btn-primary"})
    </div>
    </div>
    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#blah')
                        .attr('src', e.target.result)
                        .width(150)
                        .height(200);

                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>

    

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
